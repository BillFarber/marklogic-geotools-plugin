plugins {
  id "net.saliman.properties" version "1.4.6"
  id "com.marklogic.ml-gradle" version "3.3.0"
}

repositories {
  jcenter()
  maven { url "http://developer.marklogic.com/maven2/" }
}

configurations {
  mlcp
}

dependencies {
  mlcp "com.marklogic:mlcp:9.0.4"
  mlcp files("lib")
}

task loadGeoToolsData(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  database = mlAppConfig.contentDatabaseName
  port = mlAppConfig.restPort
  input_file_path = "data"
  input_compressed = "true"
  transform_module = "/lib/geoJSONTransformLib.sjs"
  transform_function = "transform"
  batch_size = 1
  transaction_size = 1
}

task loadLandPolygonsAndCoastlines(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  database = mlAppConfig.contentDatabaseName
  port = mlAppConfig.restPort
  input_file_path = "data/landPolygonsAndCoastlines"
  input_compressed = "true"
  transform_module = "/lib/geoJSONTransformLib.sjs"
  transform_function = "transform"
  batch_size = 1
  transaction_size = 1
}

task loadGeoToolsCoastlinesData(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  database = mlAppConfig.contentDatabaseName
  port = mlAppConfig.restPort
  input_file_path = "data/ne_50m_coastline_linestring.zip"
  input_compressed = "true"
  transform_module = "/lib/geoJSONTransformLib.sjs"
  transform_function = "transform"
  batch_size = 1
  transaction_size = 1
  output_collections = "ne_50m_coastline,geojson"
}

task loadGeoToolsLandPolygonsData(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  database = mlAppConfig.contentDatabaseName
  port = mlAppConfig.restPort
  input_file_path = "data/ne_50m_land_polygons.zip"
  input_compressed = "true"
  transform_module = "/lib/geoJSONTransformLib.sjs"
  transform_function = "transform"
  batch_size = 1
  transaction_size = 1
  output_collections = "ne_50m_land,geojson"
}